[project]
name = "ssb-datadoc"
version = "1.0.13"
description = "Document dataset metadata. For use in Statistics Norway's metadata system."
authors = [{ name = "Statistics Norway", email = "metadata@ssb.no" }]
license = "MIT"
readme = "README.md"
classifiers = ["Development Status :: 4 - Beta", "Framework :: Dash", "Typing :: Typed"]

requires-python = ">=3.12"
dependencies = [
    "arrow>=1.3.0",
    "dapla-toolbelt-metadata>=0.7.0",
    "dash>=2.15.0",
    "dash-bootstrap-components>=1.1.0",
    "flask-healthz>=0.0.3",
    "gunicorn>=23.0.0",
    "pydantic>=2.5.2",
    "python-dotenv>=1.0.1",
    "ssb-dash-components>=0.9.1",
]

[project.urls]
homepage = "https://github.com/statisticsnorway/datadoc-editor"
repository = "https://github.com/statisticsnorway/datadoc-editor"
documentation = "https://statisticsnorway.github.io/datadoc-editor"
changelog = "https://github.com/statisticsnorway/datadoc-editor/releases"

[project.scripts]
datadoc = "datadoc_editor.app:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "coverage[toml]>=6.2",
    "deptry>=0.12.0",
    "faker>=37.1.0",
    "furo>=2021.11.12",
    "mypy>=0.950",
    "myst-parser>=0.16.1",
    "nbstripout>=0.5.0",
    "pandas-stubs>=2.2.3.250308",
    "pre-commit>=4.2.0",
    "pyarrow-stubs>=10.0.1.9",
    "pygments>=2.10.0",
    "pytest>=7.1.2",
    "pytest-cov>=3.0.0",
    "pytest-mock>=3.14.0",
    "python-kacl>=0.6.3",
    "requests-mock>=1.12.1",
    "ruff>=0.0.284",
    "sphinx>=6.2.1",
    "sphinx-autobuild>=2021.3.14",
    "sphinx-autodoc-typehints>=1.24.0",
    "sphinx-click>=3.0.2",
    "tomli>=2.2.1",
    "typeguard>=2.13.3",
    "types-beautifulsoup4>=4.12.0.20250204",
    "types-colorama>=0.4.15.20240311",
    "types-pygments>=2.19.0.20250305",
    "types-setuptools>=79.0.0.20250422",
    "xdoctest[colors]>=0.15.10",
]

[tool.hatch.build.targets.wheel]
packages = ["src/datadoc_editor"]

[tool.pytest.ini_options]
pythonpath = ["src/datadoc_editor"]

[tool.uv]
required-version = ">=0.6.17"

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["datadoc_editor"]
omit = [
    "src/datadoc_editor/tests/*",
    "src/datadoc_editor/__init__.py",
    "src/datadoc_editor/frontend/callbacks/register.py",
]
relative_files = true

[tool.coverage.report]
show_missing = true
fail_under = 80

[tool.mypy]
plugins = ["pydantic.mypy"]
strict = false
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_context = true
exclude = ["docs/conf.py", "noxfile.py", "gunicorn.conf.py"]

[[tool.mypy.overrides]]
# Allow missing type hints in third-party libraries without type information.
module = [
    "dash.*",
    "dash_bootstrap_components",
    "ssb_dash_components",
    "flask_healthz",
    "dapla",
    "gcsfs",
    "pyarrow",
    "pyarrow.parquet",
    "dash.development.base_component",
    "pytest_mock",
    "dash_extensions",
]
ignore_missing_imports = true

# Disable specific error codes in the 'tests' package
# Also don't require type annotations
[[tool.mypy.overrides]]
module = ["tests.*"]
disable_error_code = ["var-annotated", "has-type", "no-any-return", "no-untyped-def"]

[tool.ruff]
force-exclude = true     # Apply excludes to pre-commit
show-fixes = true
src = ["src", "tests"]
target-version = "py312" # Minimum Python version supported

include = ["*.py", "*.pyi", "**/pyproject.toml", "*.ipynb"]
extend-exclude = ["__pycache__", "old", ".ipynb_checkpoints", "noxfile.py", "docs/conf.py"]

[tool.ruff.lint]
# Ruff rules may be customized as desired: https://docs.astral.sh/ruff/rules/
select = ["ALL"]
ignore = [
    "A003",
    "B008",
    "COM812",  # Conflicts with the formatter
    "D100",    # Suppress undocumented-public-module. Only doc of public api required.
    "E501",    # Let the formatter handle line length
    "TRY003",
    "FIX002",  # It's OK to use TODOs if they meet the requirements
    "PLC2401", # Allow non-ASCII character because of norwegian letters
]

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.ruff.lint.pydocstyle]
convention = "google" # You can also use "numpy".

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false

[tool.ruff.lint.pep8-naming]
classmethod-decorators = ["classmethod", "validator", "root_validator", "pydantic.validator"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
    "S101",   # asserts are encouraged in pytest
    "ANN001", # type annotations don't add value for test functions
    "ANN002", # type annotations don't add value for test functions
    "ANN003", # type annotations don't add value for test functions
    "ANN201", # type annotations don't add value for test functions
    "ANN204", # type annotations don't add value for test functions
    "ANN205", # type annotations don't add value for test functions
    "ANN206", # type annotations don't add value for test functions
    "D103",   # docstrings are overkill for test functions
    "D100",
]
"*/__init__.py" = ["F401"]
"src/datadoc_editor/frontend/callbacks/register_callbacks.py" = ["C901"]
# This filename is a convention for Gunicorn
"src/datadoc_editor/gunicorn.conf.py" = ["N999"]
